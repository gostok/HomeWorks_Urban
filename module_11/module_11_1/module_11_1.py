"""Библиотека `requests`"""

#Библиотека `requests` используется для отправки HTTP-запросов и получения данных с веб-сайтов.
# Она значительно упрощает работу с сетью благодаря простому и интуитивному API.


import requests

url = 'https://binaryjazz.us/wp-json/genrenator/v1/genre/' # URL API, с которого будем получать данные
res = requests.get(url)  # Выполняем GET-запрос к указанному URL


# Проверяем, успешно ли выполнен запрос (статус-код 200 - успешный)
if res.status_code == 200:

    # Преобразуем ответ в формате JSON в Python-словарь
    genres = res.json()

    # Выводим результаты в консоль
    print('Случайные жанры музыки:', genres)

else:
    # Если произошла ошибка, выводим код ошибки
    print(f'Ошибка при получении данных: {res.status_code}')



"""Библиотека `pandas`"""

#B библиотеке `pandas` можно работать с данными, считывать их из файлов,
# выполнять анализ и обрабатывать их.

import pandas as pd

# Чтение данных из CSV файла
df = pd.read_csv('genres2.csv')

# Вывод первых 5 строк данных для ознакомления с содержимым
print("Первые 5 строк данных:")
print(df.head())

# Анализ: показываем количество уникальных жанров
genre_count = df['Genre'].nunique()  # Получаем количество уникальных значений в столбце 'Genre'
print(f"Количество уникальных жанров: {genre_count}")

# Анализ: рассчитываем среднюю популярность жанров
average_popularity = df['Popularity'].mean()  # Рассчитываем среднее значение в столбце 'Popularity'
print(f"Средняя популярность жанров: {average_popularity:.2f}")



"""Библиотека `matplotlib`"""



"""

Возможности библиотеки `matplotlib`:
- Разнообразные типы графиков и визуализаций (линейные графики, столбчатые, круговые и др.).
- Настройка элементов графика (цвета, заголовки, метки).
- Интеграция с `pandas` для прямого построения графиков из DataFrame.

"""



import matplotlib.pyplot as mp

# Построение графика
df.plot(kind='bar', x='Genre', y='Popularity', color='skyblue')
mp.title('Популярность жанров')
mp.xlabel('Жанры')
mp.ylabel('Популярность')
mp.xticks(rotation=45)
mp.tight_layout()
mp.show()